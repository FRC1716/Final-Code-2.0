// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/LiftArm.h"
#include "Commands/LowerArm.h"
#include "Commands/StopArm.h"
#include "Commands/UnloadShooter.h"
#include "Commands/LoadShooter.h"
#include "Commands/FireShooter.h"
#include "Commands/Drive.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	leftJoystick.reset(new Joystick(0));

	leftB2.reset(new JoystickButton(leftJoystick.get(), 2));
		//leftB2->WhenPressed(new LowerArm());
	leftB3.reset(new JoystickButton(leftJoystick.get(), 3));
		leftB3->WhenPressed(new StopArm());
	leftB4.reset(new JoystickButton(leftJoystick.get(), 4));
		leftB4->WhenPressed(new LiftArm());
	leftB5.reset(new JoystickButton(leftJoystick.get(), 5));
		leftB5->WhenPressed(new LowerArm());

	rightJoystick.reset(new Joystick(1));

	rightB3.reset(new JoystickButton(rightJoystick.get(), 3));
		rightB3->WhenPressed(new UnloadShooter());
	rightB4.reset(new JoystickButton(rightJoystick.get(), 4));
		rightB4->WhenPressed(new LoadShooter());
	rightB5.reset(new JoystickButton(rightJoystick.get(), 5));
		rightB5->WhenPressed(new FireShooter());

    // SmartDashboard Buttons
    SmartDashboard::PutData("LowerArm", new LowerArm());
    SmartDashboard::PutData("LiftArm", new LiftArm());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    SmartDashboard::PutData("Loader command", new LoadShooter());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getLeftJoystick() {
   return leftJoystick;
}

std::shared_ptr<Joystick> OI::getRightJoystick() {
   return rightJoystick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
