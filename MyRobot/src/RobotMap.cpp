// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
//std::shared_ptr<DoubleSolenoid> RobotMap::mainSubsystemLiftSolenoidDouble;
std::shared_ptr<Solenoid> RobotMap::solenoid0;
std::shared_ptr<Solenoid> RobotMap::solenoid1;
std::shared_ptr<Solenoid> RobotMap::solenoid2;
std::shared_ptr<Solenoid> RobotMap::solenoid3;
std::shared_ptr<Solenoid> RobotMap::solenoid4;
std::shared_ptr<Solenoid> RobotMap::solenoid5;
std::shared_ptr<SpeedController> RobotMap::driveSystemFrontLeft;
std::shared_ptr<SpeedController> RobotMap::driveSystemFrontRight;
std::shared_ptr<SpeedController> RobotMap::driveSystemRearLeft;
std::shared_ptr<SpeedController> RobotMap::driveSystemRearRight;
std::shared_ptr<RobotDrive> RobotMap::driveSystemDrive;
std::shared_ptr<DigitalInput> RobotMap::frontLS;
std::shared_ptr<DigitalInput> RobotMap::sideLS;
std::shared_ptr<DigitalInput> RobotMap::backLS;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    //mainSubsystemLiftSolenoidDouble.reset(new DoubleSolenoid(0, 0, 1));
    //lw->AddActuator("MainSubsystem", "LiftSolenoidDouble", mainSubsystemLiftSolenoidDouble);
    
    solenoid0.reset(new Solenoid(0));
    solenoid1.reset(new Solenoid(1));
    solenoid2.reset(new Solenoid(2));
    solenoid3.reset(new Solenoid(3));
    solenoid4.reset(new Solenoid(4));
    solenoid5.reset(new Solenoid(5));

    driveSystemFrontLeft.reset(new Talon(0));
	//lw->AddActuator("Drive System", "Front Left", (Talon&) driveSystemFrontLeft);

	driveSystemRearLeft.reset(new Talon(1));
	//lw->AddActuator("Drive System", "Rear Left", (Talon&) driveSystemRearLeft);

	driveSystemFrontRight.reset(new Talon(2));
	//lw->AddActuator("Drive System", "Front Right", (Talon&) driveSystemFrontRight);

	driveSystemRearRight.reset(new Talon(3));
	//lw->AddActuator("Drive System", "Rear Right", (Talon&) driveSystemRearRight);

	driveSystemDrive.reset(new RobotDrive(driveSystemFrontLeft, driveSystemRearLeft, driveSystemFrontRight, driveSystemRearRight));

	//driveSystemDrive->SetSafetyEnabled(true);
		//driveSystemDrive->SetExpiration(0.1);
		//driveSystemDrive->SetSensitivity(0.5);
		//driveSystemDrive->SetMaxOutput(1.0);

    frontLS.reset(new DigitalInput(4));
    backLS.reset(new DigitalInput(5));
    sideLS.reset(new DigitalInput(6));
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
